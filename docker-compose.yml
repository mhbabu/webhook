version: '3.8'

services:
  app:
    build:
      context: /var/www/html/webhook
      dockerfile: Dockerfile
    image: webhook-app
    container_name: webhook-app
    restart: unless-stopped
    working_dir: /var/www/html/webhook
    volumes:
      - /var/www/html/webhook:/var/www/html/webhook
    networks:
      - laravel
    depends_on:
      - db
      - kafka
      - redis
    ports:
      - "8080:8080" # Reverb WebSocket server exposed here

  webserver:
    image: nginx:alpine
    container_name: webhook-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/www/html/webhook:/var/www/html/webhook
      - /var/www/html/webhook/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: webhook-mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: webhook_db
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: webhook
      MYSQL_PASSWORD: webhook
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: webhook-zookeeper
    restart: unless-stopped
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - laravel

  kafka:
    image: bitnami/kafka:latest
    container_name: webhook-kafka
    restart: unless-stopped
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - laravel

  redis:
    image: redis:alpine
    container_name: webhook-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    networks:
      - laravel

volumes:
  dbdata:

networks:
  laravel:
