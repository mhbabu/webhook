version: '3.5'

services:
  backend:
    container_name: webhook-backend
    image: webhook:backend
    build:
      context: .
      dockerfile: DockerFile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html
    ports:
      - "9000:9000"
    expose:
      - "9000"
    depends_on:
      websocket:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/var/www/html
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - automatrix
  redis:
    container_name: webhook-redis
    image: redis:latest
    ports:
      - "63790:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - automatrix
  webserver:
    container_name: webhook-webserver
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - "5000:80"
    depends_on:
      websocket:
        condition: service_healthy
      backend:
        condition: service_started
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./public:/var/www/html/public
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - automatrix
  websocket:
    build:
      context: .
      dockerfile: DockerFile
    image: webhook:websocket
    container_name: webhook-websocket
    restart: unless-stopped
    command: ["php", "artisan", "websockets:serve"]
    user: root
    volumes:
      - .:/var/www/html
      - /etc/letsencrypt/live/api.webhook.automatrixmaps.dev/fullchain.pem:/etc/letsencrypt/live/api.webhook.automatrixmaps.dev/fullchain.pem:ro
      - /etc/letsencrypt/live/api.webhook.automatrixmaps.dev/privkey.pem:/etc/letsencrypt/live/api.webhook.automatrixmaps.dev/privkey.pem:ro
    working_dir: /var/www/html
    ports:
      - "6001:6001"
    expose:
      - "6001"
    deploy:
      resources:
        limits:
          memory: 64M
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "sh", "docker/health-checker/websocket-health-checker.sh" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - automatrix
  queue:
    build:
      context: .
      dockerfile: DockerFile
    image: webhook:queue
    container_name: webhook-queue
    command: php artisan queue:work --queue=default,trip,application,bulk_applications
    volumes:
      - .:/var/www/html
    deploy:
      resources:
        limits:
          memory: 256M
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - automatrix
networks:
  automatrix:
    name: automatrix
    driver: bridge


